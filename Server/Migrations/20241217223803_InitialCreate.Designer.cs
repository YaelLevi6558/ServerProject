// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Models;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(ChineseAuctionContext))]
    [Migration("20241217223803_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A0BB84D2D89");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Server.Models.Donor", b =>
                {
                    b.Property<int>("DonorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonorId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("DonorId")
                        .HasName("PK__Donors__052E3F788362A914");

                    b.HasIndex(new[] { "Email" }, "UQ__Donors__A9D105346A61C5DE")
                        .IsUnique();

                    b.ToTable("Donors");
                });

            modelBuilder.Entity("Server.Models.Gift", b =>
                {
                    b.Property<int>("GiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiftId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DonorId")
                        .HasColumnType("int");

                    b.Property<string>("GiftName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("TicketCost")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("GiftId")
                        .HasName("PK__Gifts__4A40E60508CE312E");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DonorId");

                    b.ToTable("Gifts");
                });

            modelBuilder.Entity("Server.Models.Optional", b =>
                {
                    b.Property<int>("WinnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WinnerId"));

                    b.Property<int>("GiftId")
                        .HasColumnType("int");

                    b.Property<string>("WinnerEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WinnerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("WinnerPhone")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<DateTime>("WinningDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("WinnerId")
                        .HasName("PK__Optional__8A3D1DA87AC29E96");

                    b.HasIndex("GiftId");

                    b.ToTable("Optional", (string)null);
                });

            modelBuilder.Entity("Server.Models.Purchase", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseId"));

                    b.Property<string>("BuyerEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("BuyerPhone")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<int>("GiftId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTickets")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime");

                    b.HasKey("PurchaseId")
                        .HasName("PK__Purchase__6B0A6BBE95245DBB");

                    b.HasIndex("GiftId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Server.Models.Gift", b =>
                {
                    b.HasOne("Server.Models.Category", "Category")
                        .WithMany("Gifts")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Gifts__CategoryI__412EB0B6");

                    b.HasOne("Server.Models.Donor", "Donor")
                        .WithMany("Gifts")
                        .HasForeignKey("DonorId")
                        .IsRequired()
                        .HasConstraintName("FK__Gifts__DonorId__4222D4EF");

                    b.Navigation("Category");

                    b.Navigation("Donor");
                });

            modelBuilder.Entity("Server.Models.Optional", b =>
                {
                    b.HasOne("Server.Models.Gift", "Gift")
                        .WithMany("Optionals")
                        .HasForeignKey("GiftId")
                        .IsRequired()
                        .HasConstraintName("FK__Optional__GiftId__48CFD27E");

                    b.Navigation("Gift");
                });

            modelBuilder.Entity("Server.Models.Purchase", b =>
                {
                    b.HasOne("Server.Models.Gift", "Gift")
                        .WithMany("Purchases")
                        .HasForeignKey("GiftId")
                        .IsRequired()
                        .HasConstraintName("FK__Purchases__GiftI__44FF419A");

                    b.Navigation("Gift");
                });

            modelBuilder.Entity("Server.Models.Category", b =>
                {
                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("Server.Models.Donor", b =>
                {
                    b.Navigation("Gifts");
                });

            modelBuilder.Entity("Server.Models.Gift", b =>
                {
                    b.Navigation("Optionals");

                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
